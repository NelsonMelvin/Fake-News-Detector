# -*- coding: utf-8 -*-
"""Fake News Dictector

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1e5Tf1uK9KzKZL8QwJjNr3b6Xclr6-eCj
"""

import pandas as pd
df = pd.read_csv('/content/Fake.csv')
df_real = pd.read_csv("/content/True.csv")

df = df.head(3000)
df_real = df_real.head(3000)

df['label'] = 0 #Fake
df_real['label'] = 1 #True

data = pd.concat([df, df_real])
data.sample(frac=1).reset_index(drop=True)

import nltk
from nltk.corpus import stopwords
import string

nltk.download('stopwords')
stop_words = set(stopwords.words('english'))

import nltk
from nltk.corpus import stopwords
import string

nltk.download('stopwords')
stop_words = set(stopwords.words('english'))

def clean_text(text):
  text = text.lower()
  text = ''.join([char for char in text if char not in string.punctuation])
  words = text.split()
  words =[word for word in words if word not in stop_words]
  return ' '.join(words)

data['text'] = data['text'].apply(clean_text)

#Convert Text to Vectors (Features)
from sklearn.feature_extraction.text import TfidfVectorizer

vectorizer = TfidfVectorizer()
X = vectorizer.fit_transform(data['text'])
y = data['label']

#Train/Test Split
from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

#Train a Classifier
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report

model = LogisticRegression()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)
print("accuracy:", accuracy_score(y_test, y_pred))
print(classification_report(y_test, y_pred))

# Make it Interactive
!pip install streamlit # Install the streamlit library
# app.py
import streamlit as st

text_input = st.text_area("Paste a news article:")
if st.button("Check if it's Fake or Real"):
  cleaned = clean_text(text_input)
  vectorized = vectorizer.transform([cleaned])
  prediction = model.predict(vectorized)[0]
  result = "Real" if prediction == 1 else "Fake"
  st.write("This news is:", result)

! pip install pyngrok

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# import streamlit as st
# st.title("Fake News Detection")

!ngrok config add-authtoken 2wj7be0GdW3PzyraQv3vvseMlnc_6htTpPANsL3yQg2kAFU4E

!wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip

!unzip ngrok-stable-linux-amd64.zip

get_ipython().system_raw('./ngrok http 8888 &')

!curl http://localhost:4040/api/tunnels

!curl -s http://localhost:4040/api/tunnels | python3 -c \
    "import sys, json; print([t['public_url'] for t in json.load(sys.stdin)['tunnels']])"

# Write a simple Streamlit app to a file
with open("app.py", "w") as f:
    f.write("""
import streamlit as st

""")

!streamlit run app.py &>/dev/null &

! streamlit run app.py